name: Build Docker Image

on:
  pull_request:
    branches:
      - main

jobs:
  push_to_registry:
    name: Build Docker Image
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |-
            linux/amd64
            linux/arm64
          file: ./Dockerfile
          pull: true
          cache-from: type=gha
          cache-to: type=gha



#name: Android emulator
#on: [push]
#
#jobs:
#  test:
#    runs-on: macos-latest
#    strategy:
#      matrix:
#        api-level: [30]
#        target: [default, google_apis]
#    steps:
#      - name: checkout
#        uses: actions/checkout@v3
#
#      - name: Gradle cache
#        uses: gradle/gradle-build-action@v2
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Set up Java 11 for instrumented tests
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'adopt'
#          java-version: 11
#
#      - name: AVD cache
#        uses: actions/cache@v3
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}
#
##      - name: create AVD and generate snapshot for caching
##        if: steps.avd-cache.outputs.cache-hit != 'true'
##        uses: reactivecircus/android-emulator-runner@v2
##        with:
##          api-level: ${{ matrix.api-level }}
##          force-avd-creation: false
##          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
##          disable-animations: false
##          script: echo "Generated AVD snapshot for caching."
#
#      - name: run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          target: ${{ matrix.target }}
#          arch: arm64-v8a
#          profile: Nexus 6
#          ram-size: 2048M
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: true
#          script: ./gradlew :app:connectedDebugAndroidTest --stacktrace


#jobs:
#  build-containers:
#    name: Build ${{ matrix.config.platform }} Container
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        config:
#          - { platform: linux/arm64, tag: devel-arm64 }
#
#    steps:
#
#      - uses: actions/checkout@v3
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: arm64
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          install: true
#
##      - name: Build Docker Image
##        run: docker buildx create --use && docker buildx inspect --bootstrap
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          platforms: ${{ matrix.config.platform }}
#          push: true
#          tags: ghcr.io/${{ github.repository_owner }}/bioc-with-tinytex:${{ matrix.config.tag }}